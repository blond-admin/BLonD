cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/install
    # - $HOME/downloads # Sufficient to add miniconda.sh to TRAVIS cache.
    # - $HOME/miniconda # Add the installation to TRAVIS cache.
  apt: true
  pip: true

language: python
os:
  - linux
arch: 
  - amd64

compiler:
  - gcc
python:
  - "3.6"
  - "3.7"
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    # - gcc-4.8
    # - g++-4.8
    - mpich
    - libmpich-dev
    - build-essential
before_install:
  - echo $TRAVIS_PYTHON_VERSION
  - python --version
  - gcc --version
  - mpicc --version
  - mpirun --version
  - mkdir -p $HOME/install
  - export LD_LIBRARY_PATH="$HOME/install/lib:$LD_LIBRARY_PATH"
  - export PYTHONPATH=$TRAVIS_BUILD_DIR:$PYTHONPATH
  # - export CC=/usr/bin/gcc-4.8
  # - export CXX=/usr/bin/g++-4.8
install:
  - if [[ -f $HOME/install/lib/libfftw3.so && -f $HOME/install/include/fftw3.h ]]; then
        echo "FFTW3 already installed.";
    else
        echo "Installing FFTW3.";
        wget http://www.fftw.org/fftw-3.3.8.tar.gz;
        tar -xzvf fftw-3.3.8.tar.gz > /dev/null;
        cd fftw-3.3.8;
        ./configure --prefix=$HOME/install/ --enable-openmp --enable-threads --enable-sse2 --enable-avx --enable-avx2 --enable-fma --enable-avx-128-fma --with-our-malloc --disable-fortran --enable-shared > /dev/null;
        make -j4 > /dev/null;
        make install > /dev/null;
    fi
  - cd $TRAVIS_BUILD_DIR
  - python -m pip install --upgrade pip setuptools wheel coveralls pytest cpp-coveralls
  - pip install -r requirements.txt
before_script:
  - python blond/compile.py -p --with-fftw-threads --with-fftw-lib=$HOME/install/lib --with-fftw-header=$HOME/install/include --flags='--coverage'
  - export OMP_NUM_THREADS=2
script:
  - coverage run -m pytest -v unittests/*/test*.py
after_success:
  - test $TRAVIS_PYTHON_VERSION = "3.6" && coveralls --gcov-options='-bca -o ./'

# branches:
#   only:
#   - master
  